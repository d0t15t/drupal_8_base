<?php

/**
 * @file
 * Install, update and uninstall functions for the Drupal Swipebox module.
 */

/**
 * Implements hook_install().
 */
function dsbox_install() {
  \Drupal::config('dsbox.settings')->set('interval_days', '14')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_last_check', '0')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_local_version', '0')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_checked_version', '0')->save();
}

/**
 * Implements hook_uninstall().
 */
function dsbox_uninstall() {
  \Drupal::config('dsbox.settings')->delete();
}

/**
 * Implements hook_requirements().
 */
function dsbox_requirements($phase) {
  $requirements = array();

  if ($phase != 'runtime') {
    // The Libraries module is required by the function
    // dsbox_get_local_library_version().
    $libraries_enabled = \Drupal::moduleHandler()->moduleExists('libraries');
    if (!$libraries_enabled) {
      $requirements['swipebox_library'] = array(
        'title' => t('Swipebox jQuery library'),
        'severity' => REQUIREMENT_ERROR,
        'value' => FALSE,
        'description' => t('The Libraries module is required to enable the Drupal Swipebox module.')
      );

      return $requirements;
    }

    // This is only necessary in the installation phase.
    $dsbox_enabled = \Drupal::moduleHandler()->moduleExists('dsbox');
    if (!$dsbox_enabled) {
      require_once __DIR__ . DIRECTORY_SEPARATOR . 'dsbox.module';
    }

    $local_library_version = dsbox_get_local_library_version();
    if ($local_library_version == 0) {
      $requirements['swipebox_library'] = array(
        'title' => t('Swipebox jQuery library'),
        'severity' => REQUIREMENT_ERROR,
        'value' => FALSE,
        'description' => t('Cannot detect the local Swipebox jQuery library. See Drupal Swipebox module README.txt for install instructions.')
      );

      return $requirements;
    }

    return $requirements;
  }

  if ($phase == 'runtime') {
    $severity = REQUIREMENT_INFO;
    $description = '';
    $dsbox_config = \Drupal::config('dsbox.settings');

    // Make sure to run the library version check only if exist data from
    // a successful current vendor version check (successful cron action).
    if ($dsbox_config->get('swipebox_last_check') > 0) {

      // The local version.
      $swipebox_local_version = dsbox_get_local_library_version();

      $value = $swipebox_local_version;

      // The vendor version.
      $swipebox_checked_version = $dsbox_config->get('swipebox_checked_version');

      if ($swipebox_local_version > 0 && version_compare($swipebox_checked_version, $swipebox_local_version, '>')) {
        $download_link = \Drupal::l('Swipebox', \Drupal\Core\Url::fromUri(DSBOX_DOWNLOAD_URL));

        $help_content = t('Drupal Swipebox help content');
        if (\Drupal::moduleHandler()->moduleExists('help')) {
          $help_content = \Drupal::l(t('Drupal Swipebox help content'), \Drupal\Core\Url::fromUri('base://admin/help/dsbox'));
        }

        $value = t('New version %version available.', array('%version' => $swipebox_checked_version));
        $description = t('See Drupal Swipebox module README.txt or the !help-content for install instructions. Library download: !link', array('!help-content' => $help_content, '!link' => $download_link));
        $severity = REQUIREMENT_WARNING;
      }

      $requirements['swipebox_library'] = array(
        'title' => t('Swipebox jQuery library'),
        'severity' => $severity,
        'value' => $value,
        'description' => $description
      );

    }

    return $requirements;
  }
}

/**
 * Update Drupal Swipebox config settings.
 */
function dsbox_update_8001() {
  \Drupal::config('dsbox.settings')->set('check.interval_days', '14')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_last_check', '0')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_local_version', '0')->save();
  \Drupal::config('dsbox.settings')->set('swipebox_checked_version', '0')->save();

  return t('The <em>Drupal Swipebox</em> configuration settings have been updated.');
}

/**
 * Update Drupal Swipebox config settings.
 */
function dsbox_update_8002() {
  \Drupal::config('dsbox.settings')->set('interval_days', '14')->save();

  return t('The <em>Drupal Swipebox</em> configuration setting <em>interval_days</em> have been updated.');
}
